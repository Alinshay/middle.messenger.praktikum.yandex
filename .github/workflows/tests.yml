name: Tests

on:
  pull_request:
    branches:
      - main


jobs:
  sprint_1:
    if: ${{github.head_ref == 'sprint_1'}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - name: Set up GitHub Actions
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: 小heck if the repository is private
      run: exit 1
      if: ${{github.event.repository.private}}
    - name: Get testing lib
      run: set -eu && git clone https://github.com/Yandex-Practicum/test-second-floor.git
    - name: Check dist and node_modules in .gitignore
      run: bash test-second-floor/sprint_1/check_gitignore.sh
    - name: Check npm run start existence
      run: bash test-second-floor/sprint_1/check_start.sh
    - name: Check Parcel in start script
      run: bash test-second-floor/sprint_1/check_parcel.sh
    - name: Check PORT 3000
      run: bash test-second-floor/sprint_1/check_port.sh
    - name: Check routing
      run: node test-second-floor/sprint_1/check_routing.js

  sprint_2:
    if: ${{github.head_ref == 'sprint_2'}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - name: Set up GitHub Actions
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: 小heck if the repository is private
      run: exit 1
      if: ${{github.event.repository.private}}
    - name: Get testing lib
      run: set -eu && git clone https://github.com/Yandex-Practicum/test-second-floor.git
    - name: Check dist and node_modules in .gitignore
      run: bash test-second-floor/sprint_1/check_gitignore.sh
    - name: Check npm run start existence
      run: bash test-second-floor/sprint_1/check_start.sh
    - name: Check Parcel in start script
      run: bash test-second-floor/sprint_1/check_parcel.sh
    - name: Check PORT 3000
      run: bash test-second-floor/sprint_1/check_port.sh
    - name: Check routing
      run: node test-second-floor/sprint_1/check_routing.js
      # sprint 2 checks
    - name: Check typescript in package.json
      run: node test-second-floor/sprint_2/check_typescript.js
    - name: Check tsconfig required rules
      run: node test-second-floor/sprint_2/check_tsconfig.js
    - name: Check eslint
      run: node test-second-floor/sprint_2/check_eslint.js
    - name: Check stylelint
      run: node test-second-floor/sprint_2/check_stylelint.js

  sprint_3:
    if: ${{github.head_ref == 'sprint_3'}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - name: Set up GitHub Actions
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: 小heck if the repository is private
      run: exit 1
      if: ${{github.event.repository.private}}
    - name: Get testing lib
      run: set -eu && git clone https://github.com/Yandex-Practicum/test-second-floor.git
    - name: Run the test
      run: bash test-second-floor/sprint_3/run.sh

  sprint_4:
    if: ${{github.head_ref == 'sprint_4'}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - name: Set up GitHub Actions
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: 小heck if the repository is private
      run: exit 1
      if: ${{github.event.repository.private}}
    - name: Get testing lib
      run: set -eu && git clone https://github.com/Yandex-Practicum/test-second-floor.git
    - name: Run the test
      run: bash test-second-floor/sprint_4/run.sh
